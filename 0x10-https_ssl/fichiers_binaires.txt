#include <stdio.h>
typedef struct etudiant
{
	int mat;
	char nom[20];
	char prenom[20];
	int note;
}etudiant;

//Ajout etudiant
void ajout()
{
	etudiant e;
	printf("matricule : ");
	scanf("%d",&e.mat);
	printf("nom : ");
	scanf("%*c");
	fgets(e.nom,sizeof(e.nom),stdin);
	strtok(e.nom,"\n");
	printf("prenom : ");
	fgets(e.prenom,sizeof(e.prenom),stdin);
	strtok(e.prenom,"\n");
	printf("note : ");
	scanf("%d",&e.note);
	FILE* f = fopen("ETUDIANT.DAT", "ab");
	fwrite(&e, sizeof(etudiant), 1, f);
	fclose(f);	
}


//imprimer un etudiant
void imprimer(etudiant e)
{
	printf("\n \n mat = %d",e.mat);
	printf("\n nom = %s",e.nom);
	printf("\n prenom = %s",e.prenom);
	printf("\n note = %d",e.note);
}
//Afficher
void afficher()
{
	etudiant e;
	FILE* fo = fopen("ETUDIANT.DAT", "rb");
	while (fread(&e, sizeof(etudiant), 1, fo))
	{
		imprimer(e);
	}
	fclose(fo);
}

//Recherche d'un etudiant par son matricule 
recherche(int m)
{
	etudiant e;
	int i=0;
	FILE* fo = fopen("ETUDIANT.DAT", "rb");
	while (fread(&e, sizeof(etudiant), 1, fo))
	{
		if (e.mat==m)
		{
			imprimer(e);
			i=1;
		}	
	}
	if(i==0)
	printf("\n Matricule introuvable !");
	fclose(fo);	
}

//Acces direct a un etudiant par sa position
void  acces(int p)
{
	FILE* f=fopen("ETUDIANT.DAT", "rb");
	etudiant e;
	fseek(f, sizeof(etudiant)*(p-1), SEEK_SET);
	if (fread(&e, sizeof(etudiant), 1, f))
	{
	imprimer(e);
	}
	else
	printf("Position introuvable : ");
	fclose(f);	
	
}

//Etudiants admis
void admis()
{
	etudiant e;
	FILE* fo = fopen("ETUDIANT.DAT", "rb");
	while (fread(&e, sizeof(etudiant), 1, fo))
	{
		if (e.note>=10)
		imprimer(e);
	}
	fclose(fo);
}

//Modification d'un note par acces direct
void modification(int p, int n)
{
	etudiant e;
	FILE* f=fopen("ETUDIANT.DAT", "r+"); 
	fseek(f, sizeof(etudiant)*(p-1), SEEK_SET);
	if (fread(&e, sizeof(etudiant), 1, f))
	{
		printf("\n ancienne note : %d",e.note);
		e.note=n;
		imprimer(e);
		fseek(f, sizeof(etudiant)*(p-1), SEEK_SET);
		fwrite(&e,sizeof(etudiant),1,f);
	}
	else
	printf("Position introuvable : ");
	fclose(f);
}


//Suppression 
void suppression(int m)
{
	etudiant e;
	int choix;
	int i=0;
	int r;
	FILE* f = fopen("ETUDIANT.DAT", "rb");
	FILE* fo = fopen("ETUDIANTNOUV.DAT", "wb");
	while (fread(&e, sizeof(etudiant), 1, f))
	{
		if (e.mat==m)
		{
			imprimer(e);
			i=1;
		}
		else
		{
		fwrite(&e, sizeof(etudiant), 1, fo);	
		}
	}
	fclose(f);
	fclose(fo);
	if(i==0)
	printf("\n Matricule introuvable !");
	if(i!=0)
	{
		printf("\n voulez vous supprimer cet etudiant ? 1(Oui) 0(Non)");
		scanf("%d",&choix);
		if (choix==1)
		{
		r = remove("ETUDIANT.DAT");
		printf("r= % d",r);
		if (r==0)
		{
		rename("ETUDIANTNOUV.DAT","ETUDIANT.DAT");
		printf("r= % d",r);
		printf("Etudiant supprime ");
		}	
		else
		printf("fichier non supprime ");
		}
	}
	fclose(fo);	
}

int main()
{
	int choix;
	int m;
	int p;
	int n;
	
	do
	{
	
		printf("\n\n \t MENU : ");
		printf("\n \t 1. Ajout : ");
		printf("\n \t 2. Afficher tous les etudiants :");
		printf("\n \t 3. Recherche d'un etudiant par son matricule ");
		printf("\n \t 4. Acces direct a un etudiant par sa position ");
		printf("\n \t 5. Etudiants admis ");
		printf("\n \t 6. Modification d'une note d'un etudiant en acces direct ");
		printf("\n \t 7. suppression d'un etudiant par matricule ");
		printf("\n \t 0. Arreter :");
		printf("\n");
		printf("\n Entrer votre choix : ");
		scanf("%d",&choix);
		switch (choix)
		{
		case 1 :
			ajout();
			break;
		case 2 :
			afficher();
			break;
		case 3 :
			printf("\n donner le matricule a chercher : ");
			scanf("%d",&m);
			recherche(m);
			break;
		case 4 :
			printf("\n donner la position : ");
			scanf("%d",&p);
			acces(p);
			break;
		case 5 :
			admis(p);
			break;
		case 6 :
			printf("\n donner la position : ");
			scanf("%d",&p);
			printf("\n donner la nouvelle note : ");
			scanf("%d",&n);
			modification(p,n);
			break;
		case 7 :
			printf("\n donner le matricule : ");
			scanf("%d",&m);
			suppression(m);
			break;
		}		
	}while (choix!=0);
	
}